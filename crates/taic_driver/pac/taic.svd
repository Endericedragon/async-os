<?xml version="1.0" encoding="utf-8"?>

<device schemaVersion="1.3"
  xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
  xs:noNamespaceSchemaLocation="cmsis-svd.xsd">
  <name>TAIC</name>
  <version>0.0</version>
  <description>Multiple-object-interaction interrupt controller description.</description>

  <addressUnitBits>8</addressUnitBits>                  <!-- byte addressable memory -->
  <width>64</width>                                     <!-- bus width is 64 bits -->
  <size>64</size>   <!-- this is the default size (number of bits) of all peripherals
                        and register that do not define "size" themselves -->
  <resetValue>0x0000000000000000</resetValue>   <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFFFFFFFFFF</resetMask>     <!-- by default all 32Bits of the registers are used -->
  <peripherals>
    <peripheral>
      <name>TAIC</name>
      <description>Multiple-object-interaction interrupt controller description.</description>
      <baseAddress>0x1000000</baseAddress>      <!-- mmio baseaddr -->
      <size>64</size>       <!-- default bit-width of any register contained in the device -->
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000000</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <cluster>
          <dim>0x100</dim>
          <dimIncrement>0x1000</dimIncrement>
          <dimName>harts</dimName>
          <name>hart%s</name>
          <description>Related registers of one hart</description>
          <addressOffset>0x0</addressOffset>
          <access>read-write</access>

          <register>
            <name>add</name>
            <description>Add task into the priority queue.</description>
            <addressOffset>0x00</addressOffset>
            <access>write-only</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>fetch</name>
            <description>Fetch a task from the priority queue.</description>
            <addressOffset>0x08</addressOffset>
            <access>read-only</access>
            <fields>
              <field>
                <name>tcb</name>
                <description>The pointer of task control block.</description>
                <bitRange>[64:6]</bitRange>
              </field>
            </fields>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>switch_process</name>
            <description>Switch process.</description>
            <addressOffset>0x10</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>switch_os</name>
            <description>Switch os.</description>
            <addressOffset>0x18</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_recv_task</name>
            <description>Register receive task.</description>
            <addressOffset>0x20</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_recv_target_os</name>
            <description>Register receive target os.</description>
            <addressOffset>0x28</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_recv_target_proc</name>
            <description>Register receive target process.</description>
            <addressOffset>0x30</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_recv_target_task</name>
            <description>Register receive target task.</description>
            <addressOffset>0x38</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_send_task</name>
            <description>Register send task.</description>
            <addressOffset>0x40</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_send_target_os</name>
            <description>Register send target os.</description>
            <addressOffset>0x48</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_send_target_proc</name>
            <description>Register send target process.</description>
            <addressOffset>0x50</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>register_send_target_task</name>
            <description>Register send target task.</description>
            <addressOffset>0x58</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>send_intr_os</name>
            <description>send interrupt to the target os.</description>
            <addressOffset>0x60</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>send_intr_proc</name>
            <description>send interrupt to the target process.</description>
            <addressOffset>0x68</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>send_intr_task</name>
            <description>send interrupt to the target task.</description>
            <addressOffset>0x70</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>switch_hypervisor</name>
            <description>Switch the the hypervisor.</description>
            <addressOffset>0x78</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>current</name>
            <description>Get the current task.</description>
            <addressOffset>0x80</addressOffset>
            <access>read-only</access>
            <fields>
              <field>
                <name>tcb</name>
                <description>The pointer of task control block.</description>
                <bitRange>[64:6]</bitRange>
              </field>
            </fields>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>remove</name>
            <description>Remove the specific task.</description>
            <addressOffset>0x88</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>status</name>
            <description>The status register.</description>
            <addressOffset>0x90</addressOffset>
            <access>read-only</access>
            <fields>
              <field>
                <name>cause</name>
                <description>The cause of interrupt.</description>
                <bitRange>[3:0]</bitRange>
              </field>
              <field>
                <name>ocnt</name>
                <description>The online hart of the current os/process.</description>
                <bitRange>[64:4]</bitRange>
              </field>
            </fields>
            <dataType>uint64_t</dataType>
          </register>

          <register>
            <name>dump</name>
            <description>Dump the information on the specific position.</description>
            <addressOffset>0x98</addressOffset>
            <access>read-write</access>
            <dataType>uint64_t</dataType>
          </register>
                    
        </cluster>
      </registers>
    </peripheral>
  </peripherals>

</device>